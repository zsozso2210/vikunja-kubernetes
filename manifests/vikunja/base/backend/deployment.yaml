apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: vikunja
    app.kubernetes.io/name: vikunja
  name: vikunja-api
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/component: api
      app.kubernetes.io/instance: vikunja
      app.kubernetes.io/name: vikunja
  template:
    metadata:
      labels:
        app.kubernetes.io/component: api
        app.kubernetes.io/instance: vikunja
        app.kubernetes.io/name: vikunja
    spec:
      containers:
        - env:
          - name: VIKUNJA_DATABASE_USER
            value: "postgres" # Todo: move to secret
          - name: VIKUNJA_DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgresql-credentials
                key: password
          - name: VIKUNJA_DATABASE_HOST
            value: "postgresql-ha-pgpool" 
          - name: VIKUNJA_SERVICE_JWTSECRET
            valueFrom:
              secretKeyRef:
                name: postgresql-credentials
                key: repmgr-password # Todo: Change it to JWTSecret
          - name: VIKUNJA_SERVICE_FRONTENDURL
            value: http://vikunja-frontend:8080
          image: 'vikunja/api:latest'
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: '1'
              memory: 512Mi
            requests:
              cpu: '0.5'
              memory: 256Mi
          name: api
          ports:
            - containerPort: 3456
              name: http
              protocol: TCP
          # startupProbe:
          #   type: http
          #   httpGet:
          #     path: /health
          #     port: 3456
          # readinessProbe:
          #   type: http
          #   httpGet:
          #     path: /health
          #     port: 3456
          # livenessProbe:
          #   type: http
          #   httpGet:
          #     path: /health
          #     port: 3456
          securityContext:
            capabilities:
              add:
                - CAP_CHOWN
          volumeMounts:
            - mountPath: /tmp
              name: tmp
            - mountPath: /etc/vikunja/config.yaml
              name: api-config
              subPath: api-config.yaml
            # - mountPath: /app/vikunja/files
            #   name: data
              
      serviceAccountName: vikunja
      affinity:
        nodeAffinity:
          # requiredDuringSchedulingIgnoredDuringExecution:
          #   nodeSelectorTerms:
          #   - matchExpressions:
          #     - key: kubernetes.io/hostname
          #       operator: In
          #       values:
          #       - 'vikunja-local-worker3'
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: worker-node
                operator: In
                values:
                - 'true'
        #   preferredDuringSchedulingIgnoredDuringExecution:
        #   - weight: 100
        #     preference:
        #       matchExpressions:
        #       - key: app.kubernetes.io/component 
        #         operator: In
        #         values:
        #         - api
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component 
                operator: In
                values:
                - api
            topologyKey: "kubernetes.io/hostname"
          # preferredDuringSchedulingIgnoredDuringExecution: 
          # - weight: 100  
          #   podAffinityTerm:
          #     labelSelector:
          #       matchExpressions:
          #       - key: app.kubernetes.io/component 
          #         operator: In 
          #         values:
          #         - frontend
          #     topologyKey: kubernetes.io/hostname


          # - labelSelector:
          #     matchExpressions:
          #     - key: app.kubernetes.io/component
          #       operator: NotIn
          #       values:
          #       - api
              # - key: app.kubernetes.io/instance
              #   operator: In
              #   values:
              #   - vikunja
              # - key: app.kubernetes.io/name
              #   operator: In
              #   values:
              #   - vikunja
            #topologyKey: "kubernetes.io/hostname"

        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                - frontend
            topologyKey: "kubernetes.io/hostname"
          # - labelSelector:
          #     matchExpressions:
          #     - key: app.kubernetes.io/component
          #       operator: NotIn
          #       values:
          #       - api
          #  topologyKey: "kubernetes.io/hostname"
              # - key: app.kubernetes.io/instance
              #   operator: In
              #   values:
              #   - vikunja
              # - key: app.kubernetes.io/name
              #   operator: In
              #   values:
              #   - vikunja
            
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/component: api
              # todo: add to frontend and api to same node
      volumes:
        - emptyDir: {}
          name: tmp
        - name: api-config
          secret:
            secretName: vikunja
        # - name: data
        #   persistentVolumeClaim:
        #     claimName: backend-pvc
